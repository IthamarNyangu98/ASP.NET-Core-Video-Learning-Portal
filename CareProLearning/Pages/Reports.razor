@page "/reports"
@using CareProLearning.Models
@using CareProLearning.Services

@inject IModuleService ModuleService

<h4 class="text-center mt-3">MER Reports</h4>

@if (modules == null)
{
    <div class="spinner"></div>
}
else
{
    <div class="container mt-3">
        <div class="row">
            @foreach (var module in modules.Where(m => m.Category == "Reports"))
            {
                <div class="col-md-4 mb-5">
                    <div class="card h-100 video-card">
                        <img class="card-img-top" src="@module.ThumbnailImagePath" alt="@module.Title">

                        <h5 class="card-title px-3 pt-3">@module.Title</h5>

                        <div class="card-overlay">
                            <div class="overlay-content">
                                <p class="card-text">@module.Description</p>
                                <div class="progress">
                                    <div class="progress-bar" role="progressbar" style="width: @CalculateProgressWidth(module.ProgressInSeconds, module.LengthInSeconds)"></div>
                                </div>
                                <a href="/video/@module.ModuleId" class="btn btn-primary">Watch Video</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    private List<Module>? modules;

    protected override async Task OnInitializedAsync()
    {
        modules = (await ModuleService.GetModules()).ToList();
    }

    private string CalculateProgressWidth(double progressInSeconds, double totalLengthInSeconds)
    {
        if (totalLengthInSeconds == 0)
        {
            return "0%";
        }
        var progressPercentage = (progressInSeconds / totalLengthInSeconds) * 100;
        return $"{progressPercentage}%";
    }
}
